import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css               */function s(e){const r="=".repeat((4-e.length%4)%4),i=(e+r).replace(/-/g,"+").replace(/_/g,"/"),o=window.atob(i),n=new Uint8Array(o.length);for(let t=0;t<o.length;++t)n[t]=o.charCodeAt(t);return n}async function a(){if(!("serviceWorker"in navigator)||!("PushManager"in window)){console.error("Push notifications not supported");return}try{const e=await navigator.serviceWorker.ready;let r=await e.pushManager.getSubscription();if(r)return console.log("Already subscribed to push notifications"),console.log("Push Subscription:",JSON.stringify(r)),d(),r;const i=await fetch("https://sosika-backend.onrender.com/api/push/public-key"),{publicKey:o}=await i.json();return r=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:s(o)}),await fetch("https://sosika-backend.onrender.com/api/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:r,vendorId:c()})}),console.log("Successfully subscribed to push notifications"),r}catch(e){throw console.error("Error subscribing to push notifications:",e),e}}function c(){return localStorage.getItem("vendorId")}async function u(){if("serviceWorker"in navigator)try{const e=await navigator.serviceWorker.register("sw.js");return console.log("Service worker registered:",e),e}catch(e){throw console.error("Service worker registration failed:",e),e}else throw new Error("Service workers not supported")}async function l(){try{await u();const e=document.getElementById("push-subscribe-button");e&&e.addEventListener("click",async()=>{try{await a(),e.textContent="Notifications Enabled",e.disabled=!0}catch(r){console.error("Failed to subscribe:",r)}})}catch(e){console.error("Failed to initialize push notifications:",e)}}function p(){const e={serviceWorker:"serviceWorker"in navigator,pushManager:"PushManager"in window,permissions:"permissions"in navigator};return console.log("Push support details:",e),e.serviceWorker&&e.pushManager}p();function d(){if(!("serviceWorker"in navigator)){console.error("Service Worker not supported");return}navigator.serviceWorker.ready.then(e=>{console.log("Service Worker is ready"),e.active.postMessage({type:"TEST_MESSAGE",payload:"Testing service worker communication"})}).catch(e=>{console.error("Service Worker not ready:",e)})}document.addEventListener("DOMContentLoaded",l);
